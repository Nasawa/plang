{
  "Action": {
    "FunctionName": "Inject",
    "Parameters": [
      {
        "Type": "string",
        "Name": "type",
        "Value": "db"
      },
      {
        "Type": "string",
        "Name": "pathToDll",
        "Value": "npgsql/lib/net7.0/Npgsql.dll"
      },
      {
        "Type": "Nullable`1<Boolean>",
        "Name": "globalForWholeApp",
        "Value": true
      }
    ],
    "ReturnValue": null
  },
  "Text": "inject db, npgsql/lib/net7.0/Npgsql.dll, make it global",
  "Reload": false,
  "LlmQuestion": {
    "temperature": null,
    "top_p": null,
    "frequencyPenalty": null,
    "presencePenalty": null,
    "maxLength": 4000,
    "type": "PLang.Modules.InjectModule.Builder",
    "system": "Your job is: \r\n1. Parse user intent\r\n2. Map the intent to one of C# function provided to you\r\n3. Return a valid JSON\r\n\r\nVariable is defined with starting and ending %, e.g. %filePath%. Variables MUST be wrapped in quotes(\") in json response, e.g. { \"name\":\"%name%\" }\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")% \r\n- settingName would be the api key, config key, \r\n- defaultValue for settings is the usual value given, make it \"\" if no value can be default\r\n- Explain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nParameters: List of parameters that are needed according to the user intent.\r\n- Type: the object type in c#\r\n- Name: name of the variable\r\n- Value: \"%variable%\" or hardcode string that should be used\r\nReturnValue: Only if the function returns a value AND if user defines %variable% to write into. If no %variable% is defined then set as null.\n\r\nif user does not define if injection is global for whole app, then globalForWholeApp=false\r\n\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: [{\"Type\": string,\n\"VariableName\": string}]}",
    "question": "inject db, npgsql/lib/net7.0/Npgsql.dll, make it global",
    "assistant": "## functions available starts ##\r\nvoid Inject(String type, String pathToDll, Nullable`1<Boolean> globalForWholeApp)  // type can be: db, settings, caching, logger, llm, askuser, encryption, archiver.\r\n## functions available ends ##",
    "model": "gpt-4",
    "caching": true,
    "RawResponse": null
  },
  "RunOnBuild": false
}