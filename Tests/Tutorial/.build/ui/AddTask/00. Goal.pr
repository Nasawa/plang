{
  "GoalName": "AddTask",
  "Comment": null,
  "GoalSteps": [
    {
      "Text": "form, inputs for \"task\"(required) and \"due_date\"(required, type is date)",
      "Comment": null,
      "ModuleType": "PLang.Modules.HtmlModule",
      "Name": "CreateForm",
      "Description": "Create a form with two input fields: 'task' and 'due_date'. Both fields are required. The 'due_date' field should be of type date.",
      "PrFileName": "01. CreateForm.pr",
      "RelativePrPath": ".build\\ui\\AddTask\\01. CreateForm.pr",
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Generated": "2024-01-15T17:53:28.7206419+00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Custom": {},
      "Number": 0,
      "LineNumber": 1,
      "LlmQuestion": {
        "temperature": null,
        "top_p": null,
        "frequencyPenalty": null,
        "presencePenalty": null,
        "maxLength": 4000,
        "type": "StepBuilder",
        "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement.\r\nYou MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null. if error should be handled but text is not defined, then use * for key\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"OnExceptionContainingTextCallGoal\"? : { String : String, ... }},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
        "question": "form, inputs for \"task\"(required) and \"due_date\"(required, type is date)",
        "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }, { \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\" }, { \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database query, select, update, insert, delete and execute sql statement\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
        "model": "gpt-4",
        "caching": true,
        "RawResponse": null
      }
    },
    {
      "Text": "button \"Save\", call !NewTask",
      "Comment": null,
      "ModuleType": "PLang.Modules.CallGoalModule",
      "Name": "CallNewTask",
      "Description": "When the 'Save' button is clicked, the function 'NewTask' is called.",
      "PrFileName": "02. CallNewTask.pr",
      "RelativePrPath": ".build\\ui\\AddTask\\02. CallNewTask.pr",
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Generated": "2024-01-15T17:53:42.4164196+00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Custom": {},
      "Number": 1,
      "LineNumber": 2,
      "LlmQuestion": {
        "temperature": null,
        "top_p": null,
        "frequencyPenalty": null,
        "presencePenalty": null,
        "maxLength": 4000,
        "type": "StepBuilder",
        "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement.\r\nYou MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null. if error should be handled but text is not defined, then use * for key\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"OnExceptionContainingTextCallGoal\"? : { String : String, ... }},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
        "question": "button \"Save\", call !NewTask",
        "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }, { \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\" }, { \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database query, select, update, insert, delete and execute sql statement\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
        "model": "gpt-4",
        "caching": true,
        "RawResponse": null
      }
    },
    {
      "Text": "call !Todos",
      "Comment": null,
      "ModuleType": "PLang.Modules.CallGoalModule",
      "Name": "CallTodosGoal",
      "Description": "Call the 'Todos' goal",
      "PrFileName": "03. CallTodosGoal.pr",
      "RelativePrPath": ".build\\ui\\AddTask\\03. CallTodosGoal.pr",
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Generated": "2024-01-15T17:53:58.6366798+00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Custom": {},
      "Number": 2,
      "LineNumber": 3,
      "LlmQuestion": {
        "temperature": null,
        "top_p": null,
        "frequencyPenalty": null,
        "presencePenalty": null,
        "maxLength": 4000,
        "type": "StepBuilder",
        "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement.\r\nYou MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null. if error should be handled but text is not defined, then use * for key\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"OnExceptionContainingTextCallGoal\"? : { String : String, ... }},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
        "question": "call !Todos",
        "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }, { \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\" }, { \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database query, select, update, insert, delete and execute sql statement\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
        "model": "gpt-4",
        "caching": true,
        "RawResponse": null
      }
    }
  ],
  "Description": null,
  "Visibility": 1,
  "GoalFileName": "AddTask.goal",
  "RelativeGoalPath": "\\ui\\AddTask.goal",
  "RelativeGoalFolderPath": "\\ui",
  "RelativePrPath": ".build\\ui\\AddTask\\00. Goal.pr",
  "RelativePrFolderPath": ".build\\ui\\AddTask",
  "BuilderVersion": "0.1.0.0",
  "GoalApiInfo": null,
  "Injections": [],
  "Signature": null,
  "Hash": "6e1c9608d41690c212179880af020b3a5e00094cc3012ff6ad43c3ae180480f7"
}