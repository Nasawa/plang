{
  "Action": {
    "FunctionName": "Insert",
    "Parameters": [
      {
        "Type": "System.String",
        "Name": "sql",
        "Value": "insert into docs (id, Name, Guide, System, OutputFilename) values (@id, @Name, @Guide, @System, @OutputFilename)"
      },
      {
        "Type": "System.Collections.Generic.List`1[System.Object]",
        "Name": "SqlParameters",
        "Value": [
          {
            "ParameterName": "@id",
            "VariableNameOrValue": "%id%",
            "TypeFullName": "System.Int64"
          },
          {
            "ParameterName": "@Name",
            "VariableNameOrValue": "Plang or OpenAI",
            "TypeFullName": "System.String"
          },
          {
            "ParameterName": "@Guide",
            "VariableNameOrValue": "template/plang_or_openai.txt",
            "TypeFullName": "System.String"
          },
          {
            "ParameterName": "@System",
            "VariableNameOrValue": "template/guidance/teacher.txt",
            "TypeFullName": "System.String"
          },
          {
            "ParameterName": "@OutputFilename",
            "VariableNameOrValue": "./PlangOrOpenAI.md",
            "TypeFullName": "System.String"
          }
        ]
      }
    ],
    "ReturnValue": null
  },
  "Text": "insert into docs Name='Plang or OpenAI'\n            Guide='template/plang_or_openai.txt'\n            System='template/guidance/teacher.txt'\n            OutputFilename='./PlangOrOpenAI.md'                           ",
  "Reload": false,
  "LlmRequest": {
    "temperature": 0.0,
    "top_p": 0.0,
    "frequencyPenalty": 0.0,
    "presencePenalty": 0.0,
    "maxLength": 4000,
    "llmResponseType": "json",
    "scheme": "{\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: [{\"Type\": string,\n\"VariableName\": string}] = null}",
    "type": "PLang.Modules.DbModule.Builder",
    "promptMessage": [
      {
        "role": "system",
        "content": [
          {
            "type": "text",
            "text": "Map user command to this c# function: \r\n\r\n## csharp function ##\r\nInt32 Insert(String sql, List<object>()? SqlParameters = null)\r\n## csharp function ##\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%.\r\nSqlParameters is List of ParameterInfo(string ParameterName, string VariableNameOrValue, string TypeFullName)\r\nTypeFullName is Full name of the type in c#, System.String, System.Double, System.DateTime, System.Int64, etc.\r\nParameter @id MUST be type System.Int64\r\nYou MUST modify the user command by adding id to the sql statement and parameter %id%.\r\nIf table name is a variable, keep the variable in the sql statement\r\nYou MUST generate a valid sql statement for PostgreSQL.\r\nYou MUST provide SqlParameters if SQL has @parameter.\r\n"
          },
          {
            "type": "text",
            "text": "You MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: [{\"Type\": string,\n\"VariableName\": string}] = null}"
          }
        ]
      },
      {
        "role": "assistant",
        "content": [
          {
            "type": "text",
            "text": "# examples #\r\n\"insert into users, name=%name%\" => sql: \"insert into users (id, name) values (@id, @name)\"\r\n\"insert into tableX, %phone%, write to %rows%\" => sql: \"insert into tableX (id, phone) values (@id, @phone)\"\r\n\"insert into %table%, %phone%, write to %rows%\" => sql: \"insert into %table% (id, phone) values (@id, @phone)\"\r\n# examples #"
          },
          {
            "type": "text",
            "text": "### docs table info starts ###\n[{\"cid\":0,\"name\":\"id\",\"type\":\"INTEGER\",\"notnull\":0,\"dflt_value\":null,\"pk\":1},{\"cid\":1,\"name\":\"Name\",\"type\":\"TEXT\",\"notnull\":1,\"dflt_value\":null,\"pk\":0},{\"cid\":2,\"name\":\"Guide\",\"type\":\"TEXT\",\"notnull\":1,\"dflt_value\":null,\"pk\":0},{\"cid\":3,\"name\":\"System\",\"type\":\"TEXT\",\"notnull\":1,\"dflt_value\":null,\"pk\":0},{\"cid\":4,\"name\":\"OutputFilename\",\"type\":\"TEXT\",\"notnull\":1,\"dflt_value\":null,\"pk\":0},{\"cid\":5,\"name\":\"Created\",\"type\":\"DATETIME\",\"notnull\":0,\"dflt_value\":\"CURRENT_TIMESTAMP\",\"pk\":0},{\"cid\":6,\"name\":\"LastUpdate\",\"type\":\"DATETIME\",\"notnull\":0,\"dflt_value\":\"CURRENT_TIMESTAMP\",\"pk\":0}]\n### table info ends ###"
          }
        ]
      },
      {
        "role": "user",
        "content": [
          {
            "type": "text",
            "text": "insert into docs Name='Plang or OpenAI'\n            Guide='template/plang_or_openai.txt'\n            System='template/guidance/teacher.txt'\n            OutputFilename='./PlangOrOpenAI.md'                           "
          }
        ]
      }
    ],
    "model": "gpt-4",
    "caching": true,
    "RawResponse": "{\n  \"FunctionName\": \"Insert\",\n  \"Parameters\": [\n    {\n      \"Type\": \"System.String\",\n      \"Name\": \"sql\",\n      \"Value\": \"insert into docs (id, Name, Guide, System, OutputFilename) values (@id, @Name, @Guide, @System, @OutputFilename)\"\n    },\n    {\n      \"Type\": \"System.Collections.Generic.List`1[System.Object]\",\n      \"Name\": \"SqlParameters\",\n      \"Value\": [\n        {\n          \"ParameterName\": \"@id\",\n          \"VariableNameOrValue\": \"%id%\",\n          \"TypeFullName\": \"System.Int64\"\n        },\n        {\n          \"ParameterName\": \"@Name\",\n          \"VariableNameOrValue\": \"Plang or OpenAI\",\n          \"TypeFullName\": \"System.String\"\n        },\n        {\n          \"ParameterName\": \"@Guide\",\n          \"VariableNameOrValue\": \"template/plang_or_openai.txt\",\n          \"TypeFullName\": \"System.String\"\n        },\n        {\n          \"ParameterName\": \"@System\",\n          \"VariableNameOrValue\": \"template/guidance/teacher.txt\",\n          \"TypeFullName\": \"System.String\"\n        },\n        {\n          \"ParameterName\": \"@OutputFilename\",\n          \"VariableNameOrValue\": \"./PlangOrOpenAI.md\",\n          \"TypeFullName\": \"System.String\"\n        }\n      ]\n    }\n  ]\n}"
  },
  "RunOnBuild": false
}