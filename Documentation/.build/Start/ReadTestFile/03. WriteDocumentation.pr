{
  "Action": {
    "FunctionName": "AskLlm",
    "Parameters": [
      {
        "Type": "String",
        "Name": "scheme",
        "Value": null
      },
      {
        "Type": "String",
        "Name": "system",
        "Value": "Write documentation for the plang language in .md format"
      },
      {
        "Type": "String",
        "Name": "assistant",
        "Value": "# plang examples #\n%result%\n# plang example #\n# csharp code #\n%module%\n# csharp code #"
      },
      {
        "Type": "String",
        "Name": "user",
        "Value": "# Headline is %module.moduleName%\n## What is %module.moduleName%(Module)\nWrite short summary what %module.moduleName%(Module) is (300 chars)\n### Another way to explain %module.moduleName%(Module)\n#### ELI5\nGive ELI15 explanation what %module.moduleName% is\n#### Business Perspective\nGive a Business Perspective explanation what %module.moduleName% is\n#Examples\nList out each example of the plang example code you made before\n# Best Practices for %module.moduleName%\nGive best practices  for %module.moduleName%\n#CSharp\nHeadline = %module.moduleName%Module\nSource code: https://github.com/PLangHQ/Plang/modules/%module.moduleName%Module .cs\nList out each method in the %module.moduleName%Module class with summary"
      },
      {
        "Type": "String",
        "Name": "model",
        "Value": "gpt-4"
      },
      {
        "Type": "Int32",
        "Name": "maxLength",
        "Value": 8000
      },
      {
        "Type": "String",
        "Name": "llmResponseType",
        "Value": "markdown"
      }
    ],
    "ReturnValue": {
      "Type": "String",
      "VariableName": "documentation"
    }
  },
  "Text": "[llm]: system: Write documentation for the plang language in .md format\n                Write documentation for the plang language in .md format\n    assistant: # plang examples #\n        %result%\n        # plang example #\n        # csharp code #\n        %module%\n        # csharp code #\n    user:\n        # Headline is %module.moduleName%\n        ## What is %module.moduleName%(Module) \n        Write short summary what %module.moduleName%(Module) is (300 chars)\n        ### Another way to explain %module.moduleName%(Module) \n        #### ELI5\n        Give ELI15 explanation what %module.moduleName% is\n        #### Business Perspective\n        Give a Business Perspective explanation what %module.moduleName% is\n        #Examples\n        List out each example of the plang example code you made before\n        # Best Practices for %module.moduleName%\n        Give best practices  for %module.moduleName%\n        #CSharp\n        Headline = %module.moduleName%Module \n        Source code: https://github.com/PLangHQ/Plang/modules/%module.moduleName%Module .cs\n        List out each method in the %module.moduleName%Module class with summary\n    mdel:'gpt-4'\n    max length = 8K\n    write to %documentation%",
  "Reload": false,
  "LlmQuestion": {
    "type": "PLang.Modules.LlmModule.Builder",
    "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nOnExceptionContainingTextCallGoal - if no text is defined, set as \"*\", goal to call is required from user\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
    "question": "command: [llm]: system: Write documentation for the plang language in .md format\n                Write documentation for the plang language in .md format\n    assistant: # plang examples #\n        %result%\n        # plang example #\n        # csharp code #\n        %module%\n        # csharp code #\n    user:\n        # Headline is %module.moduleName%\n        ## What is %module.moduleName%(Module) \n        Write short summary what %module.moduleName%(Module) is (300 chars)\n        ### Another way to explain %module.moduleName%(Module) \n        #### ELI5\n        Give ELI15 explanation what %module.moduleName% is\n        #### Business Perspective\n        Give a Business Perspective explanation what %module.moduleName% is\n        #Examples\n        List out each example of the plang example code you made before\n        # Best Practices for %module.moduleName%\n        Give best practices  for %module.moduleName%\n        #CSharp\n        Headline = %module.moduleName%Module \n        Source code: https://github.com/PLangHQ/Plang/modules/%module.moduleName%Module .cs\n        List out each method in the %module.moduleName%Module class with summary\n    mdel:'gpt-4'\n    max length = 8K\n    write to %documentation%",
    "assistant": "## functions available defined in csharp ##\r\nvoid AskLlm(String? scheme, String? system, String? assistant, String? user, String? model = gpt-4, Double? temperature = 0, Double? topP = 0, Double? frequencyPenalty = 0, Double? presencePenalty = 0, Int32? maxLength = 4000, Boolean? cacheResponse = True, String? llmResponseType = text)  // . \n\r\n## functions available ends ##\r\n## defined variables ##\r\nresult(String), \r\n## defined variables ##\nThe following user request is for constructing a message to LLM engine\r\n\r\nDetermine what part is system, assistant and user properties. If you cannot map it, the whole user request should be on user property\r\nllmResponseType can be text, json, markdown or html. If user does not define scheme then default to text, if scheme is defined use json\r\n\r\n## examples ##\r\nsystem: do stuff, user: this is data from user, write to %data%, %output% and %dest% => scheme: null, llResponseType=text\r\nsystem: setup up system, asssistant: some assistant stuff, user: this is data from user, scheme: {data:string, year:number, name:string} => scheme:  {data:string, year:number, name:string}\r\n## examples ##\r\n",
    "model": "gpt-4",
    "caching": true,
    "Reload": false,
    "PreviousResult": null,
    "RawResponse": "{\r\n  \"FunctionName\": \"AskLlm\",\r\n  \"Parameters\": [\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"scheme\",\r\n      \"Value\": null\r\n    },\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"system\",\r\n      \"Value\": \"Write documentation for the plang language in .md format\"\r\n    },\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"assistant\",\r\n      \"Value\": \"# plang examples #\\n%result%\\n# plang example #\\n# csharp code #\\n%module%\\n# csharp code #\"\r\n    },\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"user\",\r\n      \"Value\": \"# Headline is %module.moduleName%\\n## What is %module.moduleName%(Module)\\nWrite short summary what %module.moduleName%(Module) is (300 chars)\\n### Another way to explain %module.moduleName%(Module)\\n#### ELI5\\nGive ELI15 explanation what %module.moduleName% is\\n#### Business Perspective\\nGive a Business Perspective explanation what %module.moduleName% is\\n#Examples\\nList out each example of the plang example code you made before\\n# Best Practices for %module.moduleName%\\nGive best practices  for %module.moduleName%\\n#CSharp\\nHeadline = %module.moduleName%Module\\nSource code: https://github.com/PLangHQ/Plang/modules/%module.moduleName%Module .cs\\nList out each method in the %module.moduleName%Module class with summary\"\r\n    },\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"model\",\r\n      \"Value\": \"gpt-4\"\r\n    },\r\n    {\r\n      \"Type\": \"Int32\",\r\n      \"Name\": \"maxLength\",\r\n      \"Value\": 8000\r\n    },\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"llmResponseType\",\r\n      \"Value\": \"markdown\"\r\n    }\r\n  ],\r\n  \"ReturnValue\": {\r\n    \"Type\": \"String\",\r\n    \"VariableName\": \"documentation\"\r\n  }\r\n}"
  },
  "RunOnBuild": false
}